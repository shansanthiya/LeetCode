
    
    int depth(TreeNode *root) {
			if(root == NULL)return 0;
			return max(depth(root->left), depth(root->right)) + 1;
		}
		bool isBalanced(TreeNode* root) {
			if(root == NULL)return true;
			return isBalanced(root->left) && isBalanced(root->right) && abs(depth(root->left) - depth(root->right)) <= 1;
		}
    
    /* int maxDepth(TreeNode *root) {
			if(root == NULL)return 0;
			return max(maxDepth(root->left), maxDepth(root->right)) + 1;
		}
    int minDepth(TreeNode *root) {
			if(root == NULL)return 0;
			return min(minDepth(root->left), minDepth(root->right)) + 1;
		}
		bool isBalanced(TreeNode* root) {
			if(root == NULL) return true;
			return (maxDepth(root) - minDepth(root) <= 1);
		}*/
