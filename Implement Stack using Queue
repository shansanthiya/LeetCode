class MyStack {
public:
    /** Initialize your data structure here. */
    MyStack() {
        
    }
    
    /** Push element x onto stack. */
    void push(int x) {
        q1.push(x);
        
    }
    
    /** Removes the element on top of the stack and returns that element. */
    int pop() {
        if(!q1.empty())
        {
            while(q1.size() != 1)
            {
                q2.push(q1.front());
                q1.pop();
            }
        }
        int x = q1.front();
        q1.pop();
        
        queue<int> q = q1;
        q1 = q2;
        q2 = q;
        return x;
    }
    
    /** Get the top element. */
    int top() {
        if(!q1.empty())
        {
            while(q1.size() != 1)
            {
                q2.push(q1.front());
                q1.pop();
            }
        }
        int x = q1.front();
        q1.pop();
        q2.push(x);
        
        queue<int> q = q1;
        q1 = q2;
        q2 = q;
        return x;
        
    }
    
    /** Returns whether the stack is empty. */
    bool empty() {
        return q1.empty() && q2.empty();
        
    }
    
private:
    queue<int> q1, q2;
    
};
