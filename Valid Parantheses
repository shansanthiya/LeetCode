bool isValid(string s) {
        stack<char> st;
        int len = s.length();
        for(int i =0 ; i < len; i++)
        {
            switch(s[i])
            {
                case '(':
                case '{':
                case '[': st.push(s[i]);
                            break;
                case ')': if(st.empty() || st.top() != '(')
                                return false;
                            else 
                                st.pop();
                            break;
                case '}':if(st.empty() || st.top() != '{')
                                return false;
                            else 
                                st.pop();
                            break;
                case ']':if(st.empty() || st.top() != '[')
                                return false;
                            else 
                                st.pop();
                            break;
            }
                
        }
        
        return st.empty();
    }
};



// Only one type of bracket : O(n)
bool isValid(string s) 
{
 	int len = s.length();
	int count = 0;
	for(int i = 0; i < len ; i++)
	{
		if(s[i] == ‘(‘  )
			count++;
		else if( s[i] == ‘)’)
	        {
		        if(count == 0)
			        return false;
		        count--;
	        }
	}
	if( count == 0)
		return true;
	return false;
   }
